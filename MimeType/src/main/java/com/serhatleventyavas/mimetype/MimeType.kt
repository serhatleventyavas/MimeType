package com.serhatleventyavas.mimetype

object MimeType {

    private val mimeTypeMap: HashMap<String, String> = HashMap()

    init {
        load("application/andrew-inset", "ez")
        load("application/dsptype", "tsp")
        load("application/futuresplash", "spl")
        load("application/hta", "hta")
        load("application/mac-binhex40", "hqx")
        load("application/mac-compactpro", "cpt")
        load("application/mathematica", "nb")
        load("application/msaccess", "mdb")
        load("application/oda", "oda")
        load("application/ogg", "ogg")
        load("application/pdf", "pdf")
        load("application/pgp-keys", "key")
        load("application/pgp-signature", "pgp")
        load("application/pics-rules", "prf")
        load("application/rar", "rar")
        load("application/rdf+xml", "rdf")
        load("application/rss+xml", "rss")
        load("application/zip", "zip")
        load("application/vnd.android.package-archive",
            "apk")
        load("application/vnd.cinderella", "cdy")
        load("application/vnd.ms-pki.stl", "stl")
        load(
            "application/vnd.oasis.opendocument.database", "odb")
        load(
            "application/vnd.oasis.opendocument.formula", "odf")
        load(
            "application/vnd.oasis.opendocument.graphics", "odg")
        load(
            "application/vnd.oasis.opendocument.graphics-template",
            "otg")
        load(
            "application/vnd.oasis.opendocument.image", "odi")
        load(
            "application/vnd.oasis.opendocument.spreadsheet", "ods")
        load(
            "application/vnd.oasis.opendocument.spreadsheet-template",
            "ots")
        load(
            "application/vnd.oasis.opendocument.text", "odt")
        load(
            "application/vnd.oasis.opendocument.text-master", "odm")
        load(
            "application/vnd.oasis.opendocument.text-template", "ott")
        load(
            "application/vnd.oasis.opendocument.text-web", "oth")
        load("application/msword", "doc")
        load("application/msword", "dot")
        load(
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            "docx")
        load(
            "application/vnd.openxmlformats-officedocument.wordprocessingml.template",
            "dotx")
        load("application/vnd.ms-excel", "xls")
        load("application/vnd.ms-excel", "xlt")
        load(
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "xlsx")
        load(
            "application/vnd.openxmlformats-officedocument.spreadsheetml.template",
            "xltx")
        load("application/vnd.ms-powerpoint", "ppt")
        load("application/vnd.ms-powerpoint", "pot")
        load("application/vnd.ms-powerpoint", "pps")
        load(
            "application/vnd.openxmlformats-officedocument.presentationml.presentation",
            "pptx")
        load(
            "application/vnd.openxmlformats-officedocument.presentationml.template",
            "potx")
        load(
            "application/vnd.openxmlformats-officedocument.presentationml.slideshow",
            "ppsx")
        load("application/vnd.rim.cod", "cod")
        load("application/vnd.smaf", "mmf")
        load("application/vnd.stardivision.calc", "sdc")
        load("application/vnd.stardivision.draw", "sda")
        load(
            "application/vnd.stardivision.impress", "sdd")
        load(
            "application/vnd.stardivision.impress", "sdp")
        load("application/vnd.stardivision.math", "smf")
        load("application/vnd.stardivision.writer",
            "sdw")
        load("application/vnd.stardivision.writer",
            "vor")
        load(
            "application/vnd.stardivision.writer-global", "sgl")
        load("application/vnd.sun.xml.calc", "sxc")
        load(
            "application/vnd.sun.xml.calc.template", "stc")
        load("application/vnd.sun.xml.draw", "sxd")
        load(
            "application/vnd.sun.xml.draw.template", "std")
        load("application/vnd.sun.xml.impress", "sxi")
        load(
            "application/vnd.sun.xml.impress.template", "sti")
        load("application/vnd.sun.xml.math", "sxm")
        load("application/vnd.sun.xml.writer", "sxw")
        load(
            "application/vnd.sun.xml.writer.global", "sxg")
        load(
            "application/vnd.sun.xml.writer.template", "stw")
        load("application/vnd.visio", "vsd")
        load("application/x-abiword", "abw")
        load("application/x-apple-diskimage", "dmg")
        load("application/x-bcpio", "bcpio")
        load("application/x-bittorrent", "torrent")
        load("application/x-cdf", "cdf")
        load("application/x-cdlink", "vcd")
        load("application/x-chess-pgn", "pgn")
        load("application/x-cpio", "cpio")
        load("application/x-debian-package", "deb")
        load("application/x-debian-package", "udeb")
        load("application/x-director", "dcr")
        load("application/x-director", "dir")
        load("application/x-director", "dxr")
        load("application/x-dms", "dms")
        load("application/x-doom", "wad")
        load("application/x-dvi", "dvi")
        load("application/x-flac", "flac")
        load("application/x-font", "pfa")
        load("application/x-font", "pfb")
        load("application/x-font", "gsf")
        load("application/x-font", "pcf")
        load("application/x-font", "pcf.Z")
        load("application/x-freemind", "mm")
        load("application/x-futuresplash", "spl")
        load("application/x-gnumeric", "gnumeric")
        load("application/x-go-sgf", "sgf")
        load("application/x-graphing-calculator", "gcf")
        load("application/x-gtar", "gtar")
        load("application/x-gtar", "tgz")
        load("application/x-gtar", "taz")
        load("application/x-hdf", "hdf")
        load("application/x-ica", "ica")
        load("application/x-internet-signup", "ins")
        load("application/x-internet-signup", "isp")
        load("application/x-iphone", "iii")
        load("application/x-iso9660-image", "iso")
        load("application/x-jmol", "jmz")
        load("application/x-kchart", "chrt")
        load("application/x-killustrator", "kil")
        load("application/x-koan", "skp")
        load("application/x-koan", "skd")
        load("application/x-koan", "skt")
        load("application/x-koan", "skm")
        load("application/x-kpresenter", "kpr")
        load("application/x-kpresenter", "kpt")
        load("application/x-kspread", "ksp")
        load("application/x-kword", "kwd")
        load("application/x-kword", "kwt")
        load("application/x-latex", "latex")
        load("application/x-lha", "lha")
        load("application/x-lzh", "lzh")
        load("application/x-lzx", "lzx")
        load("application/x-maker", "frm")
        load("application/x-maker", "maker")
        load("application/x-maker", "frame")
        load("application/x-maker", "fb")
        load("application/x-maker", "book")
        load("application/x-maker", "fbdoc")
        load("application/x-mif", "mif")
        load("application/x-ms-wmd", "wmd")
        load("application/x-ms-wmz", "wmz")
        load("application/x-msi", "msi")
        load("application/x-ns-proxy-autoconfig", "pac")
        load("application/x-nwc", "nwc")
        load("application/x-object", "o")
        load("application/x-oz-application", "oza")
        load("application/x-pkcs12", "p12")
        load("application/x-pkcs7-certreqresp", "p7r")
        load("application/x-pkcs7-crl", "crl")
        load("application/x-quicktimeplayer", "qtl")
        load("application/x-shar", "shar")
        load("application/x-shockwave-flash", "swf")
        load("application/x-stuffit", "sit")
        load("application/x-sv4cpio", "sv4cpio")
        load("application/x-sv4crc", "sv4crc")
        load("application/x-tar", "tar")
        load("application/x-texinfo", "texinfo")
        load("application/x-texinfo", "texi")
        load("application/x-troff", "t")
        load("application/x-troff", "roff")
        load("application/x-troff-man", "man")
        load("application/x-ustar", "ustar")
        load("application/x-wais-source", "src")
        load("application/x-wingz", "wz")
        load("application/x-webarchive", "webarchive")
        load("application/x-x509-ca-cert", "crt")
        load("application/x-x509-user-cert", "crt")
        load("application/x-xcf", "xcf")
        load("application/x-xfig", "fig")
        load("application/xhtml+xml", "xhtml")
        load("audio/3gpp", "3gpp")
        load("audio/basic", "snd")
        load("audio/midi", "mid")
        load("audio/midi", "midi")
        load("audio/midi", "kar")
        load("audio/mpeg", "mpga")
        load("audio/mpeg", "mpega")
        load("audio/mpeg", "mp2")
        load("audio/mpeg", "mp3")
        load("audio/mpeg", "m4a")
        load("audio/mpegurl", "m3u")
        load("audio/prs.sid", "sid")
        load("audio/x-aiff", "aif")
        load("audio/x-aiff", "aiff")
        load("audio/x-aiff", "aifc")
        load("audio/x-gsm", "gsm")
        load("audio/x-mpegurl", "m3u")
        load("audio/x-ms-wma", "wma")
        load("audio/x-ms-wax", "wax")
        load("audio/x-pn-realaudio", "ra")
        load("audio/x-pn-realaudio", "rm")
        load("audio/x-pn-realaudio", "ram")
        load("audio/x-realaudio", "ra")
        load("audio/x-scpls", "pls")
        load("audio/x-sd2", "sd2")
        load("audio/x-wav", "wav")
        load("image/bmp", "bmp")
        load("image/gif", "gif")
        load("image/ico", "cur")
        load("image/ico", "ico")
        load("image/ief", "ief")
        load("image/jpeg", "jpeg")
        load("image/jpeg", "jpg")
        load("image/jpeg", "jpe")
        load("image/pcx", "pcx")
        load("image/png", "png")
        load("image/svg+xml", "svg")
        load("image/svg+xml", "svgz")
        load("image/tiff", "tiff")
        load("image/tiff", "tif")
        load("image/vnd.djvu", "djvu")
        load("image/vnd.djvu", "djv")
        load("image/vnd.wap.wbmp", "wbmp")
        load("image/x-cmu-raster", "ras")
        load("image/x-coreldraw", "cdr")
        load("image/x-coreldrawpattern", "pat")
        load("image/x-coreldrawtemplate", "cdt")
        load("image/x-corelphotopaint", "cpt")
        load("image/x-icon", "ico")
        load("image/x-jg", "art")
        load("image/x-jng", "jng")
        load("image/x-ms-bmp", "bmp")
        load("image/x-photoshop", "psd")
        load("image/x-portable-anymap", "pnm")
        load("image/x-portable-bitmap", "pbm")
        load("image/x-portable-graymap", "pgm")
        load("image/x-portable-pixmap", "ppm")
        load("image/x-rgb", "rgb")
        load("image/x-xbitmap", "xbm")
        load("image/x-xpixmap", "xpm")
        load("image/x-xwindowdump", "xwd")
        load("model/iges", "igs")
        load("model/iges", "iges")
        load("model/mesh", "msh")
        load("model/mesh", "mesh")
        load("model/mesh", "silo")
        load("text/calendar", "ics")
        load("text/calendar", "icz")
        load("text/comma-separated-values", "csv")
        load("text/css", "css")
        load("text/html", "htm")
        load("text/html", "html")
        load("text/h323", "323")
        load("text/iuls", "uls")
        load("text/mathml", "mml")
        // add it first so it will be the default for ExtensionFromMimeType
        load("text/plain", "txt")
        load("text/plain", "asc")
        load("text/plain", "text")
        load("text/plain", "diff")
        load("text/plain", "po")     // reserve "pot" for vnd.ms-powerpoint
        load("text/richtext", "rtx")
        load("text/rtf", "rtf")
        load("text/texmacs", "ts")
        load("text/text", "phps")
        load("text/tab-separated-values", "tsv")
        load("text/xml", "xml")
        load("text/x-bibtex", "bib")
        load("text/x-boo", "boo")
        load("text/x-c++hdr", "h++")
        load("text/x-c++hdr", "hpp")
        load("text/x-c++hdr", "hxx")
        load("text/x-c++hdr", "hh")
        load("text/x-c++src", "c++")
        load("text/x-c++src", "cpp")
        load("text/x-c++src", "cxx")
        load("text/x-chdr", "h")
        load("text/x-component", "htc")
        load("text/x-csh", "csh")
        load("text/x-csrc", "c")
        load("text/x-dsrc", "d")
        load("text/x-haskell", "hs")
        load("text/x-java", "java")
        load("text/x-literate-haskell", "lhs")
        load("text/x-moc", "moc")
        load("text/x-pascal", "p")
        load("text/x-pascal", "pas")
        load("text/x-pcs-gcd", "gcd")
        load("text/x-setext", "etx")
        load("text/x-tcl", "tcl")
        load("text/x-tex", "tex")
        load("text/x-tex", "ltx")
        load("text/x-tex", "sty")
        load("text/x-tex", "cls")
        load("text/x-vcalendar", "vcs")
        load("text/x-vcard", "vcf")
        load("video/3gpp", "3gpp")
        load("video/3gpp", "3gp")
        load("video/3gpp", "3g2")
        load("video/dl", "dl")
        load("video/dv", "dif")
        load("video/dv", "dv")
        load("video/fli", "fli")
        load("video/m4v", "m4v")
        load("video/mpeg", "mpeg")
        load("video/mpeg", "mpg")
        load("video/mpeg", "mpe")
        load("video/mp4", "mp4")
        load("video/mpeg", "VOB")
        load("video/quicktime", "qt")
        load("video/quicktime", "mov")
        load("video/vnd.mpegurl", "mxu")
        load("video/x-la-asf", "lsf")
        load("video/x-la-asf", "lsx")
        load("video/x-mng", "mng")
        load("video/x-ms-asf", "asf")
        load("video/x-ms-asf", "asx")
        load("video/x-ms-wm", "wm")
        load("video/x-ms-wmv", "wmv")
        load("video/x-ms-wmx", "wmx")
        load("video/x-ms-wvx", "wvx")
        load("video/x-msvideo", "avi")
        load("video/x-sgi-movie", "movie")
        load("x-conference/x-cooltalk", "ice")
        load("x-epoc/x-sisx-app", "sisx")
    }

    private fun load(mimeType: String, extension: String) {
        val hasExistsExtension = mimeTypeMap.containsKey(extension)
        if (!hasExistsExtension) {
            mimeTypeMap[extension] = mimeType
        }
    }

    fun getMimeTypeFromExtension(extension: String): String {
        return mimeTypeMap.getOrDefault(extension, "")
    }
}